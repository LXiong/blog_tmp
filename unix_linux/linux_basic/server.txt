
Linux文件系统结构：
http://www.iteye.com/topic/816268

/               - 根目录
/bin            - 做为基础系统所需要的最基础的命令就是放在这里。
                  比如 ls、cp、mkdir等命令；功能和/usr/bin类似，
				  这个目录中的文件都是可执行的，
				  普通用户都可以使用的命令。
/boot           - Linux的内核及引导系统程序所需要的文件，
                  比如 vmlinuz initrd.img 文件都位于这个目录中。
				  在一般情况下，GRUB或LILO系统引导管理器也位于
				  这个目录；启动装载文件存放位置，
				  如kernels,initrd,grub。一般是一个独立的分区。
/dev            - 存放各种外部设备， 如硬盘、显示器、声卡、磁盘等。
                  还有如 /dev/null. /dev/console /dev/zero
				  /dev/full 等。
/etc            - 系统的配置文件存放地. 一些服务器的配置文件也在这里；
                  比如用户帐号及密码配置文件；
				  /etc/opt: /opt对应的配置文件；
                  /etc/X11: Xwindows系统配置文件;
                  /etc/xml: XML配置文件;
                  ...
/home           - 用户工作目录，和个人配置文件，如个人环境变量等，
                  所有的账号分配一个工作目录。一般是一个独立的分区。
/lib            - 库文件存放地。bin和sbin需要的库文件。
                  类似windows的DLL。
/lost+found     - 用于存放系统异常时丢失的文件（如突然宕机），
                  以利于恢复。
/media          - 可拆卸的媒介挂载点，如CD-ROMs、移动硬盘、U盘，
                  系统默认会挂载到这里来。
/mnt            - 临时挂载文件系统。这个目录一般是用于存放
                  挂载储存设备的挂载目录的，比如有/cdrom  /usb等目录。
				  可以参看/etc/fstab的定义。
/opt            - 用于存放安装的可选的应用程序包。（一般用来装大型的软件）
/proc           - 操作系统运行时，进程（正在运行中的程序）信息
                  及内核信息（比如cpu、硬盘分区、内存信息等）
				  存放在这里。/proc目录伪装的文件系统proc的挂载目录，
				  proc并不是真正的文件系统，
				  它的定义可以参见 /etc/fstab 。
/root           - Root用户的工作目录
/sbin           - 和bin类似，是一些可执行文件，
                  不过不是所有用户都需要的，
				  一般是系统管理所需要使用得到的。（root用户）
/selinux
/srv            - 该目录存放一些服务启动之后需要提取的数据。
/sys            - 用于存放系统信息。
/tmp            - 系统的临时文件，一般系统重启不会被保存。
/usr            - 包含了系统用户工具和程序。用于存放普通用户的
                  应用程序、库文件和文档等。（一般的应用软件默认装在/usr）
				  /usr/bin：非必须的普通用户可执行命令
                  /usr/include：标准头文件
                  /usr/lib: /usr/bin/ 和 /usr/sbin/的库文件
                  /usr/sbin: 非必须的可执行文件
                  /usr/src: 内核源码
                  /usr/X11R6: X Window System, Version 11, Release 6.
/var            - 用于存放那些在时间、大小、内容上会经常变化的文件。（用于服务器）


-----------------------------------------------------------

Linux Server分区：

(VirtualBox)100GB Disk(102398MB)
/boot     100MB
/         20000MB
/home     20000MB
swap      2000MB

/var      40000MB
/tmp      2000MB

LVM
RAID

一些系统格式：

LVM(Logical Volume Manager)：
这是用来弹性调整档案系统容量的一种机制,可以让你的档案系统容量变大
或变小而不改变原有的档案数据内容！

Software RAID：
利用Linux操作系统的特性，用软件模拟出磁盘阵列的功能！

vfat：同时被Linux与Windows所支援的档案系统类型。
如果你的主机硬盘内同时存在Windows与Linux操作系统，
为了数据的交换，确实可以建置一个vfat的档案系统喔！

-----------------------------------------------------------

Cancel system clock uses UTC!
(记得取消开启UTC时钟）

localhost.localdomain:
dragonite-centos.dgni.net

restart network:
/etc/init.d/network restart


自动寻找最快镜像的补丁
//yum -y install yum-plugin-fastestmirror

yum [option] [查询工作项目] [相关参数]
选项与参数：
[option]：主要的选项，包括有：
  -y ：当 yum 要等待使用者输入时，这个选项可以自动提供 yes 的回应；
  --installroot=/some/path ：将该软件安装在 /some/path 而不使用默认路径
[查询工作项目] [相关参数]：这方面的参数有：
  search  ：搜寻某个软件名称或者是描述 (description) 的重要关键字；
  list    ：列出目前 yum 所管理的所有的软件名称与版本，有点类似 rpm -qa；
  info    ：同上，不过有点类似 rpm -qai 的运行结果；
  provides：从文件去搜寻软件！类似 rpm -qf 的功能！

  
查看CentOS内核版本：
cat /proc/version
uname -a
uname -r

查看linux版本：

1.列出所有版本信息,
lsb_release -a
(注:这个命令适用于所有的linux，包括Redhat、SuSE、Debian等发行版)

2.执行cat /etc/issue:
cat /etc/issue

3.执行cat /etc/redhat-release:
cat /etc/redhat-release

查看系统是64位还是32位:
getconf LONG_BIT
file /bin/ls


su
yum update
yum-complete-transaction

Install VBoxAdditions:


yum install kernel-devel gcc

Then reboot,

yum info kernel-devel
uname -r
(make sure the version of kernel-devel and kernel
 is the same.)

and install the VBoxAdditions.

su
1.清除缓存目录(/var/cache/yum)下的软件包
命令：yum clean packages
2.清除缓存目录(/var/cache/yum)下的 headers
命令：yum clean headers
3.清除缓存目录(/var/cache/yum)下旧的 headers
命令：yum clean oldheaders
4.清除缓存目录(/var/cache/yum)下的软件包及旧的headers
命令：yum clean, yum clean all (= yum clean packages; yum clean oldheaders)

yum clean all


yum install ~
yum remove ~
yum search ~
yum info ~

-----------------------------------------------------------

NTP

yum install ntp

NTP服务的配置文件
/etc/ntp.conf: NTP服务器的主要配置文件;
/usr/share/zoneinfo: 这是一个目录，规定了各个主要时区的时间设置文件，
                     例如中国大陆的时区设定文件是
					 /usr/share/zoneinfo/Asia/Shanghai
/etc/sysconfig/clock: Linux的主要时区设置文件。每次启动后Linux操作系统
                      会自动读取这个文件来预设系统要显示的时间。
					  比如这个文件的内容为"ZONE=Asia/Shanghai"，
					  则表示Linux操作系统是时间设置使用
					  /usr/share/zoneinfo/Asia/Shanghai这个文件
/etc/localtime: 本地系统的时间设置文件。如果clock文件中使用了时间设置文件为
                /usr/share/zoneinfo/Asia/Shanghai，Linux操作系统就会将
				Shanghai这个文件复制一份为/etc/localtime。

与NTP及系统时间有关的执行文件
/bin/date: Linux系统中的修改及输出日期与时间命令；
/sbin/hwclock: 主机的BIOS时间与Linux系统时间是分开的，所以使用date命令调整
               时间后，只是调整了Linux的系统时间，还需要用hwclock命令，
			   才能将修改的时间写入BIOS中。
/usr/sbin/ntpd: NTP服务的守护进程文件，需要启动它才能提供NTP服务。默认使用
                /etc/ntp.conf里的设置
/usr/sbin/ntpdate: NTP客户端用来连接NTP服务器的命令文件
/usr/sbin/ntpq: 标准的NTP(网络时间协议)查询程序
/usr/sbin/ntptrace: 跟踪NTP主机连接到它们的控制时间源
/usr/sbin/stpstat: 标准的NTP查询程序
/sbin/clock: 调整计算机内建的硬件时钟(RTC)，执行这个命令可以显示现在时间，
             调整硬件时钟的时间将系统时间设成与硬件时钟的时间一致，或者
			 把硬件时钟回存到硬件时钟
(Linxu时钟分为系统时钟System Clock和硬件时钟Real Time Clock)


NTP服务器端的配置文件/etc/ntp.conf
使用restrict参数设置权限:
restrict [你的IP] mask [netmask_IP] [parameter]
其中parameter的参数主要有底下这些：
	ignore：   拒绝所有类型的NTP联机；
	nomodify： 客户端不能使用ntpc与ntpq这两支程序来修改服务器的时间参数，但客户端仍可透过这部主机来进行网络校时的；
	noquery：  客户端不能够使用ntpq, ntpc等指令来查询时间服务器，等于不提供NTP的网络校时啰；
	notrap：   不提供trap这个远程事件登录(remote event logging)的功能。
	notrust：  拒绝没有认证的客户端。

利用server设置上层NTP服务器:
server [IP or hostname] [prefer]
其中perfer表示[优先使用]的服务器

以driftfile记录时间差异:
driftfile [可以被ntpd写入的目录与档案]
因为预设的NTP Server本身的时间计算是依据BIOS的芯片震荡周期频率来计算的，
但是这个数值与上层Time Server不见得会一致啊！所以NTP这个daemon (ntpd)
会自动的去计算我们自己主机的频率与上层Time server的频率，
并且将两个频率的误差记录下来，记录下来的档案就是在driftfile后面接的完整档名
当中了！关于档名你必须要知道：
	driftfile 后面接的档案需要使用完整路径文件名；
	该档案不能是连结档；
	该档案需要设定成 ntpd 这个 daemon(守护进程) 可以写入的权限。
	该档案所记录的数值单位为：百万分之一秒 (ppm)。


ntp.conf配置文件如下：
vi /etc/ntp.conf
# 1. 先处理权限方面的问题，包括放行上层服务器以及开放区网用户来源：
restrict default kod nomodify notrap nopeer noquery     <==拒绝 IPv4 的用户
restrict -6 default kod nomodify notrap nopeer noquery  <==拒绝 IPv6 的用户
restrict ntp.sjtu.edu.cn   <==放行 tock.stdtime.gov.tw 进入本 NTP 服务器
restrict s1a.time.edu.cn    <==放行 tick.stdtime.gov.tw 进入本 NTP 服务器
restrict s1b.time.edu.cn    <==放行 time.stdtime.gov.tw 进入本 NTP 服务器
restrict s1c.time.edu.cn
restrict 127.0.0.1        <==底下两个是默认值，放行本机来源
restrict -6 ::1
restrict 192.168.1.0 mask 255.255.255.0 nomodify <==放行区网来源

# 2. 设定主机来源，请先将原本的 [0|1|2].centos.pool.ntp.org 的设定批注掉：
server ntp.sjtu.edu.cn prefer  <==以这部主机为最优先
server s1a.time.edu.cn
server s1b.time.edu.cn
server s1c.time.edu.cn

# 3.预设时间差异分析档案与暂不用到的 keys 等，不需要更动它：
driftfile /var/lib/ntp/drift
keys      /etc/ntp/keys
	
启动NTP服务:
service ntpd restart
或
/etc/init.d/ntpd start/status

//tail /var/log/message   <==自行检查看看有无错误

开机启动NTP服务:
chkconfig --level 35 ntpd on

观察NTP启动的端口
netstat -tlunp | grep ntp

打开iptables防火墙123端口
iptables -A INPUT -p UDP -i eth? -s 192.168.1.0/24 --dport 123 -j ACCEPT

#SELinux设置：
#setsebool -P ntpd_disable_trans 1

vi /etc/sysconfig/ntpd，添加一行:
SYNC_HWCLOCK=yes   <== 允许BIOS与系统时间同步




ntpstat   <==这个指令可以列出我们的 NTP 服务器有跟上层联机否
ntpq -p    <==可以列出目前我们的 NTP 与相关的上层 NTP 的状态,
             上头的几个字段的意义为：
			 remote：亦即是 NTP 主机的 IP 或主机名啰～注意最左边的符号
			如果有『 * 』代表目前正在作用当中的上层 NTP
			如果是『 + 』代表也有连上线，而且可作为下一个提供时间更新的候选者。
			refid：参考的上一层 NTP 主机的地址
			st：就是 stratum 阶层啰！
			when：几秒钟前曾经做过时间同步化更新的动作；
			poll：下一次更新在几秒钟之后；
			reach：已经向上层 NTP 服务器要求更新的次数
			delay：网络传输过程当中延迟的时间，单位为 10^(-6) 秒
			offset：时间补偿的结果，单位与 10^(-3) 秒
			jitter：Linux 系统时间与 BIOS 硬件时间的差异时间， 单位为 10^(-6) 秒。

tzselect
cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

NTP客户端

在Linux中进行网络校时:
ntpdate cn.pool.ntp.org

写入到BIOS:
hwclock -w

定时进行时间校正
vi /etc/crontab，添加这一行:
30 8 * * * root /usr/sbin/ntpdate cn.pool.ntp.org; /sbin/hwclock -w
(每天8:30系统就会自动进行网络时间校正)
	
---------
Ubuntu Desktop貌似硬件时钟重启后有问题？
在ubuntu 中给出了 dpkg-reconfigure tzdata 或 tzselect 工具来设置时区。
在 Server Edition 中我们可以使用tzselect来设置时区。执行：
sudo tzselect
按照提示进行选择时区，然后：
sudo cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

sudo ntpdate cn.pool.ntp.org
注意 后面一句话是与ntp服务器同步时间，
cn.pool.ntp.org是位于中国的公共NTP服务器。
PS: 如果你的机器上装了多个操作系统，Ububtu在默认情况下
认为BIOS中的时间是UTC时间，那么有可能出现两个系统将不同
的时间都写入BIOS中，出现时间混乱的问题。
在Ubuntu下修改/etc/default/rcS 文件，将 UTC=yes 改为 UTC=no 即可。

网上同步时间
1.安装ntpdate工具
sudo apt-get install ntp
2.设置系统时间与网络时间同步
sudo ntpdate cn.pool.ntp.org
3.将系统时间写入硬件时间
sudo hwclock --systohc
sudo hwclock --hctosys


CentOS:
Remember to configure network in the
set timezone page.

choose Minimal Desktop

Set the NTP time
server 0.cn.pool.ntp.org
server 3.asia.pool.ntp.org
server 0.asia.pool.ntp.org


-----------------------------------------------------------

DHCP

-----------------------------------------------------------

DNS

-----------------------------------------------------------

NIS(Network Information Service)

NIS服务器的主要文件:
/etc/rc.d/init.d/ypserv: 启动脚本
/etc/rc.d/init.d/yppasswdd: rpc.ypasswdd的客户端程序
/etc/rc.d/init.d/ypxfrd: rpc.ypxfrd的客户端程序
/etc/ypserv.conf: 存放ypserv的运行参数
/usr/sbin/yppush: 从NIS服务器的守护进程所对应的程序
/usr/sbin/ypserv: 主NIS服务器的守护进程所对应的程序
/usr/sbin/rpc.yppasswdd: rpc.yppasswdd服务器的守护进程所对应的程序
/usr/lib/yp/ypinit: 用于初始化NIS数据库
/var/yp/Makefile:设置NIS要共享文件

安装:
yum install ypserv yp-tools ypbind portmap

ypserv: NIS服务的主程序包
yp-tools: 提供NIS客户端设置功能的软件包
ypbind: 提供NIS客户端查询指令功能的软件包
portmap: 管理RPC连接

/etc/ypserv.conf是NIS的主要配置文件，
在配置文件中，最重要的是限制客户端或从服务器的查询权限，
格式如下:
Host : Domain : Map : Security

Host：指定客户端，可以是具体的IP地址，或一个网段
Domain: 设置NIS域名，在同一个NIS域中，客户端可以从NIS服务器上查询用户名和密码，
        从NIS服务器可以与主NIS服务器同步数据库内容
Map: 设置可用数据库名称，可用'*'代替所有数据库
Security: 安全性设置，主要有none,port,deny三种参数
          none:没有任何安全限制
		  port: 只允许小于1024以下的端口连接NIS服务器
		  deny: 拒绝连接NIS服务器
		  
通常设置的思路是，允许所有内网客户端连接NIS服务器，除此之外都拒绝:
127.0.0.0/255.255.255.0   : * : * : none
192.168.0.0/255.255.255.0 : * : * : none
                        * : * : * : deny
						
设置NIS域名:
vi /etc/sysconfig/network
添加这一行:
NISDOMAIN=dragonite-centos.dgni.net
YPSERV_ARGS="-p 1011"   <==设定 NIS 每次都启动在固定的埠口

添加监听域:
#vi /varyp/securenets
#255.255.255.0 192.168.1.0

vi /etc/sysconfig/yppasswdd
YPPASSWDD_ARGS="--port  1012"    <==找到这个设定值，修改一下内容成这样！


然后在终端输入:
chkconfig ypserv on
chkconfig yppasswdd on    <==允许NIS用户在客户端修改密码
/etc/init.d/ypserv start
/etc/init.d/yppasswdd start
/usr/lib/yp/ypinit -m

每次更新数据库后要使用/usr/lib/yp/ypinit -m
重新创建数据库，并重启ypserv和yppasswdd


NIS客户端

yum install ypbind rpcbind

配置:
system-config-authentication
或
setup

iptables -A INPUT -p UDP -i eth? -s 192.168.1.0/24 --dport 123 -j ACCEPT

iptables -A INPUT -p tcp -i eth? -s 192.168.100.0/24 --dport 1011 -j ACCEPT
iptables -A INPUT -p udp -i eth? -s 192.168.100.0/24 -m multiport --dport 1011,1012 -j ACCEPT

-----------------------------------------------------------

NFS

NFS服务器需要启动inet, rpcbind, nfs, mount这4个守护进程。

NFS系统结构:
/etc/exports: NFS的主要配置文件
/usr/sbin/exportfs: 维护NFS共享资源的命令，我们可以用其重新共享/etc/exports
                    变更的目录资源，并将NFS服务器共享的目录卸载或重新共享等等。
/usr/sbin/showmount: 用在客户端，查看NFS共享出来的目录资源
/var/lib/nfs/*tab: 登录文件，一个是etab，记录了NFS共享出来的目录的完整权限设定值，
                   另一个是xtab，记录曾经连接到此NFS主机的相关客户端数据
				   
vi /etc/exports
添加:
/home 192.168.0.0/24(rw,sync,no_root_squash,no_all_squash)

激活rpcbind和nfsd服务
service rpcbind start
chkconfig rpcbind on

如果修改了exports文件后，不需重启NFS，只需重新扫描一次exports文件即可:
exports [-aruv]
-a: 全部挂载/卸载 /etc/exports文件内的设置
-r: 重新挂载/etc/exports中的设置，并同步更新/etc/exports和/var/lib/nfs/xtab中的内容
-u: 卸载某一目录
-v: 输出时将共享的目录显示在屏幕上

启动NFS守护进程:
rpcbind start
nfslock start
nfs start

防火墙设置:
/*
一般来说， NFS 的服务仅会对内部网域开放，不会对因特网开放的。然而，
如果你有特殊需求的话， 那么也可能会跨不同网域就是了。但是，NFS 的防火墙特别难搞，
为什么呢？因为除了固定的 port 111, 2049 之外， 还有很多不固定的埠口是由 
rpc.mountd, rpc.rquotad 等服务所开启的，所以，你的 iptables 就很难设定规则！
那怎办？难道整个防火墙机制都要取消才可以？
为了解决这个问题， CentOS 6.x 有提供一个固定特定 NFS 服务的埠口配置文件，
那就是 /etc/sysconfig/nfs 啦！ 你在这个档案里面就能够指定特定的埠口，
这样每次启动 nfs 时，相关服务启动的埠口就会固定，如此一来， 
我们就能够设定正确的防火墙啰！这个配置文件内容很多，绝大部分的数据你都不要去更改，
只要改跟 PORT 这个关键词有关的数据即可。 那么需要更改的 rpc 服务有哪些呢？
主要有 mountd, rquotad, nlockmgr 这三个，所以你应该要这样改：

vim /etc/sysconfig/nfs
RQUOTAD_PORT=1001   <==约在 13 行左右
LOCKD_TCPPORT=30001 <==约在 21 行左右
LOCKD_UDPPORT=30001 <==约在 23 行左右
MOUNTD_PORT=1002    <==约在 41 行左右
# 记得设定值最左边的批注服务要拿掉之外，埠口的值你也可以自行决定。

 /etc/init.d/nfs restart
 rpcinfo -p | grep -E '(rquota|mount|nlock)'
    100011    2   udp   1001  rquotad
    100011    2   tcp   1001  rquotad
    100021    4   udp  30001  nlockmgr
    100021    4   tcp  30001  nlockmgr
    100005    3   udp   1002  mountd
    100005    3   tcp   1002  mountd
# 上述的输出数据已经被鸟哥汇整过了，没用到的埠口先挪掉了啦！

iptables -A INPUT -i $EXTIF -p tcp -s 120.114.140.0/24 -m multiport \
         --dport 111,2049,1001,1002,30001 -j ACCEPT
iptables -A INPUT -i $EXTIF -p udp -s 120.114.140.0/24 -m multiport \
         --dport 111,2049,1001,1002,30001 -j ACCEPT
*/





-----------------------------------------------------------

Fiew Wall

网络是双向的，服务器与客户端都得要有 IP:port
才能够让彼此的软件互相沟通.

Linux 系统有内建的防火墙机制，因此你的联机能不能成功，
得要先看防火墙的脸色才行。预设的 Linux 防火墙就有两个机制，
这两个机制都是独立存在的，因此我们预设就有两层防火墙喔。
第一层是封包过滤式的 netfilter 防火墙， 
另一个则是透过软件控管的 TCP Wrappers 防火墙。

要进入 Linux 本机的封包都会先通过 Linux 核心的预设防火墙，
就是称为 netfilter 的咚咚，简单的说，
就是 iptables 这个软件所提供的防火墙功能。

通过 netfilter 之后，网络封包会开始接受 Super daemons 
及 TCP_Wrappers 的检验，那个是什么呢？ 
说穿了就是 /etc/hosts.allow 与 /etc/hosts.deny 的配置文件功能啰。

预设的防火墙是 Linux 的内建功能，但防火墙主要管理的是 MAC, IP, Port 
等封包表头方面的信息，如果想要控管某些目录可以进入， 
某些目录则无法使用的功能，
那就得要透过权限以及服务器软件提供的相关功能了。

为了避免前面一个步骤的权限误用，或者是程序有问题所造成的资安状况，
因此 Security Enhanced Linux (安全强化 Linux) 
就来发挥它的功能啦！简单的说，
SELinux 可以针对网络服务的权限来设定一些规则 (policy) ，
让程序能够进行的功能有限， 因此即使使用者的档案权限设定错误，
以及程序有问题时，该程序能够进行的动作还是被限制的，
即使该程序使用的是 root 的权限也一样。

我们的 Linux 以及相关的软件都可能还会支持登录文件记录的功能，
为了记录历史历程， 以方便管理者在未来的错误查询与入侵检测，
良好的分析登录档的习惯是一定要建立的，尤其是 /var/log/messages 
与 /var/log/secure 这些个档案！


SELinux 的运作模式
SELinux 是透过 MAC 的方式来控管程序，他控制的主体是程序， 
而目标则是该程序能否读取的『档案资源』！

主体 (Subject)：
SELinux 主要想要管理的就是程序
目标 (Object)：
主体程序能否存取的『目标资源』一般就是文件系统。因此这个目标项目可以等文件系统划上等号；
政策 (Policy)：
由于程序与档案数量庞大，因此 SELinux 会依据某些服务来制订基本的存取安全性政策。这些政策内还会有详细的规则 (rule) 来指定不同的服务开放某些资源的存取与否。在目前的 CentOS 6.x 里面仅有提供两个主要的政策如下，一般来说，使用预设的 target 政策即可。
targeted：针对网络服务限制较多，针对本机限制较少，是预设的政策；
mls：完整的 SELinux 限制，限制方面较为严格。

我们刚刚谈到了主体、目标与政策面，但是主体能不能存取目标
除了要符合政策指定之外，主体与目标的安全性本文必须一致才能够顺利存取。
 这个安全性本文 (security context) 有点类似文件系统的 rwx 啦！
 
观察安全性本文可使用『 ls -Z 』去观察

-rw-------. root root system_u:object_r:admin_home_t:s0 anaconda-ks.cfg
-rw-r--r--. root root system_u:object_r:admin_home_t:s0 install.log
-rw-r--r--. root root system_u:object_r:admin_home_t:s0 install.log.syslog

如上所示，安全性本文主要用冒号分为三个字段 
(最后一个字段先略过不看)，这三个字段的意义为：
Identify:role:type
身份识别:角色:类型

身份识别 (Identify)： 相当于账号方面的身份识别！主要的身份识别则有底下三种常见的类型：
root：表示 root 的账号身份，如同上面的表格显示的是 root 家目录下的数据啊！
system_u：表示系统程序方面的识别，通常就是程序啰；
user_u：代表的是一般使用者账号相关的身份。

角色 (Role)： 透过角色字段，我们可以知道这个数据是属于程序、档案资源还是代表使用者。一般的角色有：
object_r：代表的是档案或目录等档案资源，这应该是最常见的啰；
system_r：代表的就是程序啦！不过，一般使用者也会被指定成为 system_r 喔！

类型 (Type)： 在预设的 targeted 政策中， Identify 与 Role 字段基本上是不重要的！重要的在于这个类型 (type) 字段！ 基本上，一个主体程序能不能读取到这个档案资源，与类型字段有关！而类型字段在档案与程序的定义不太相同，分别是：
type：在档案资源 (Object) 上面称为类型 (Type)；
domain：在主体程序 (Subject) 则称为领域 (domain) 了！
domain 需要与 type 搭配，则该程序才能够顺利的读取档案资源啦！

修改与变更这个字段
chcon [-R] [-t type] [-u user] [-r role] 档案
选项与参数：
-R  ：连同该目录下的次目录也同时修改；
-t  ：后面接安全性本文的类型字段！例如 httpd_sys_content_t ；
-u  ：后面接身份识别，例如 system_u；
-r  ：后面街角色，例如 system_r；

复原成原有的 SELinux type
restorecon [-Rv] 档案或目录
选项与参数：
-R  ：连同次目录一起修改；
-v  ：将过程显示到屏幕上





netstat, nmap

 yum install nmap
nmap localhost
nmap -sTU localhost
nmap -sP 192.168.1.0/24


-----------------------------------------------------------

SAMBA:
http://www.cnblogs.com/mchina/archive/2012/12/18/2816717.html

yum install samba samba-client
查看安装状况:
rpm -qa | grep samba
Samba服务器安装完毕，会生成配置文件目录/etc/samba和
其它一些samba可执行命令工具，
/etc/samba/smb.conf是samba的核心配置文件，
/etc/init.d/smb是samba的启动/关闭文件。

启动Samba服务器:
/etc/init.d/smb start/stop/restart

查看samba的服务启动情况
service smb status

设置开机自启动
chkconfig --level 35 smb on
//在3、5级别上自动运行samba服务
//Linux 运行有7种运行级别,分别使用0-6来表示,
//控制台界面运行级别为3，图形界面运行级别为5，
//要使某服务在系统启动时自动运行，使用chkconfig
//将该服务添加到相应级别的自启动服务列表中即可。
//运行级别0：系统停机状态，系统默认运行级别不能设为0，否则不能正常启动
//运行级别1：单用户工作状态，root权限，用于系统维护，禁止远程登陆
//运行级别2：多用户状态(没有NFS)
//运行级别3：完全的多用户状态(有NFS)，登陆后进入控制台命令行模式
//运行级别4：系统未使用，保留
//运行级别5：X11控制台，登陆后进入图形GUI模式
//运行级别6：系统正常关闭并重启，默认运行级别不能设为6，否则不能正常启动
chkconfig --list | grep smb


Samba安装好后，使用testparm命令可以测试smb.conf配置是否正确。
使用testparm –v命令可以详细的列出smb.conf支持的配置参数.

默认的smb.conf有很多个选项和内容，比较繁琐，
这里我们按照案例来讲解配置选项，先备份一下自己的smb.conf文件，
然后重新建立一个smb.conf。
cp -p /etc/samba/smb.conf    /etc/samba/smb.conf.backup

修改完后，重启smb
/etc/init.d/smb restart

测试smb.conf配置是否正确
testparm

/etc/init.d/smb start  <==这一版开始要启动两个daemon
/etc/init.d/nmb start
chkconfig smb on
chkconfig nmb on
netstat -tlunp | grep mbd

smbclient -L //127.0.0.1 
mount -t cifs //127.0.0.1/home/Dragonite/Public /mnt

添加用户
pdbedit -a -u Dragonite


getsebool -a | grep samba
打开防火墙：
setsebool -P samba_enable_home_dirs=1

-----------------------------------------------------------
http://www.linuxidc.com/Linux/2012-12/76135.htm
http://www.linuxidc.com/Linux/2013-03/81983.htm
http://server.zol.com.cn/279/2795606.html
Apache

yum install httpd

现在配置系统在引导时启动Apache
chkconfig --levels 235 httpd on
并启动Apache
/etc/init.d/httpd start
Apache的默认文档根目录是在CentOS上的/var/www/html 目录 ，
配置文件是/etc/httpd/conf/httpd.conf。

/******************************************
/etc/httpd/conf/httpd.conf (主要設定檔)
httpd 最主要的設定檔，其實整個 Apache 也不過就是這個設定檔啦！
/etc/httpd/conf.d/*.conf (很多的額外參數檔，副檔名是 .conf)
如果你不想要修改原始設定檔 httpd.conf 的話，
那麼可以將你自己的額外參數檔獨立出來， 
例如你想要有自己的額外設定值，可以將他寫入 
/etc/httpd/conf.d/backup.conf
 (注意，副檔名一定是 .conf 才行) 而啟動 Apache 時，
 這個檔案就會被讀入主要設定檔當中了！這有什麼好處？
 好處就是當你系統升級的時候， 你幾乎不需要更動原本的設定檔，
 只要將你自己的額外參數檔複製到正確的地點即可！維護更方便啦！
*******************************************/

su
cp /etc/httpd/conf/httpd.conf /etc/httpd/conf.d/backup.conf

修改配置：
/etc/httpd/conf/httpd.conf

KeepAlive On
MaxKeepAliveRequests 500

ServerAdmin weiqiangdragonite@gmail.com
#ServerName www.example.com:80

建议不要改
DocumentRoot "/home/Dragonite/Public/"
<Directory "/home/Dragonite/Public/">  <==針對特定目錄的限制！底下參數很重要！
    Options Indexes FollowSymLinks    <==建議拿掉 Indexes 比較妥當！
    AllowOverride None
    Order allow,deny
    Allow from all
</Directory>




....

-----------------------------------------------------------

MySQL

yum install mysql-server mysql


-----------------------------------------------------------

vi /etc/sysconfig/network

service network restart
or
/etc/init.d/network restart




-----------------------------------------------------------
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
-----------------------------------------------------------

Ubuntu Server:

虚拟机设置



Install

建议先选择中文界面安装，然后再修改语言环境变量。
记住手工配置网络。

-----------------------------------------------------------

Set the Static IP Address:

1.Through the TP-Link
2.Through the GUI:
3.Set the 


sudo /etc/init.d/networking restart
sudo gedit /etc/network/interfaces


-----------------------------

Instal NFS(Network File System, 网络文件系统)

nfs-kernel-server: Linux NFS 服务器；
nfs-common: NFS通用程序；
portmap: RPC端口映射程序；
nis: 同步用户信息；

所以客户端的主机名和IP地址建议加入到服务器的/etc/hosts
文件中，这样即便是DNS服务器宕机，NFS仍可以工作。

sudo apt-get install nfs-kernel-server nfs-common portmap nis
(PS:所有客户端安装NIS时，都要输入与安装NIS服务器的domain名
 比如我的UbuntuDesktop: dragonite-ubuntu-desktop)

Portmap是用来给RPC服务动态分配端口的，可以为NFS、NIS分配大范围
的端口，但是它的验证机制比较薄弱，为此，我们要做一些工作来增强
系统的安全性。
修改/etc/hosts.deny，在文件中添加一行信息来禁止所有客户端访问
该服务器：
sudo gedit /etc/hosts.deny
portmap mountd nfsd statd lockd rquotad : ALL

再修改/etc/hosts.allow，加入服务器和访问服务器的客户端IP地址:
sudo gedit /etc/hosts.allow
portmap mountd nfsd statd lockd rquotad : 192.168.1.111 192.168.1.110
portmap ypserv ypbind : 192.168.1.111 192.168.1.110

配置完成后重启Portmap:
sudo /etc/init.d/portmap restart
sudo service portmap restart/stop/start

设置NIS服务器:
sudo gedit /etc/default/nis
将NISSERVER一行改为:
NISSERVER = master

然后修改/etc/yp.conf
sudo gedit /etc/yp.conf
添加一行服务器信息，第一项为domain名称，第二项为服务器名称:
domain dragonite-ubuntu-desktop server dragonite-VirtualBox
(查看hostname:
 ~$ hostname
想永久更改主机名，需要修改/etc/sysconfig/network)

然后为了保证服务器安全，还需修改/etc/ypserv.securenets,
将0.0.0.0那一行注释掉，然后加入客户端的IP地址(加host关键字):
host 192.168.1.111
host ....

最后为了方便，还需要修改/etc/netgroup，建立一个组(netgroup)，
把所有客户端加入该组中:
dragonite (Dragonite-Win7,,)
(PS: dragonite就是组名，每台客户信息放在一个括号里)

然后初始化数据库:
sudo /usr/lib/yp/ypinit -m
系统会问你要不要添加其他主机作为服务器，并显示"next host to add:"
这时按"Ctrl+D"键，然后按Y键即可。

重启NIS服务:

sudo service ypbind restart
sudo service ypserv restart

以后如果有什么变动，比如新建用户等，都需要重建YP数据库:
sudo make -C /var/yp

要想把某个目录通过NFS共享出来，就需要将该目录信息写入/etc/exports
这个配置文件中:
sudo gedit /etc/exports
添加共享目录:
/home/dragonite/Public *(rw,sync,no_subtree_check)
(PS: *号可改为IP地址或主机名)

然后重启NFS:
sudo service nfs-kernel-server restart

----------------------------

客户端配置

CentOS：

yp-tools ：提供 NIS 相关的查寻指令功能
ypbind   ：提供 NIS Client 端的设定软件
ypserv   ：提供 NIS Server 端的设定软件
rpcbind  ：就是 RPC 一定需要的数据啊

看鸟哥的

挂载目录:
su
sudo mount 192.168.1.110:/home/dragonite/Public /Dragonite/Public/
sudo umount


-----------------------------------------------------------

SSH

sudo apt-get install openssh-server
sudo apt-get install openssh-client

查看ssh登陆日志:
grep sshd /var/log/auth.log

登陆:
ssh 192.168.1.110
ssh dragonite@192.168.1.110
退出:
exit

生成秘钥(在客户机上):
(Don't be root，不要成为root再去生成)
ssh-keygen -t rsa -C "dragonite's key"
(-C 选项后面的字符串是作为备注用的，也可使用自己的邮箱地址)
这样，秘钥对就生成了，
公钥是~./ssh/id_rsa.pub
秘钥是~./ssh/id_rsa

将公钥复制到服务器:
ssh-copy-id -i .ssh/id_ras.pub dragonite@192.168.1.110

服务器配置:

禁止使用密码登录，仅允许使用密钥
先备份:
sudo cp /etc/ssh/sshd_config /etc/ssh/sshd_config.backup
sudo gedit /etc/ssh/sshd_config
替换下面内容:
PermitRootLogin no
PasswordAuthentication no
UsePAM no

然后重启:
sudo service ssh restart

-----------------------------------------------------------

网络监控

sudo apt-get install nagios3 nagios-plugins nagios-images

配置文件在/etc/nagios3 和 /etc/nagios-plugins
具体配置文件在/etc/nagios3/cgi.cfg中


-----------------------------------------------------------

FTP

Pure-FTPd

sudo apt-get install pure-ftpd-mysql

添加用户和组
sudo groupadd -g 2001 ftpgroup
sudo useradd -u 2001 -s /bin/false -d /dev/null -c "Pure-FTPd User" -g ftpgroup ftpuser





