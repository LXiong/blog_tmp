

一、Linux服务基础及服务管理

1.Linux系统服务基础
	服务（Service）是运行在操作系统后台的一个或多个程序，为用户或系统提供某项特定功能服务的程序。
	服务通常是不中断的、随时接收请求的后台运行的进程
	Linux中服务通过System V架构进行管理

	System V（罗马数字的五）定义了运行级别的概念，默认系统有7个运行级别：
		0   关机
		1   单用户模式
		2   不带网络的多用户模式
		3   带网络的多用户模式，纯文本界面
		4   未使用
		5   带网络的多用户模式，图形界面
		6   重启

	每个级别下都有启动、不启动的服务
	服务的启动、关闭等功能通过System V格式的脚本进行管理，脚本保存在：
		/etc/rc.d/init.d

	命令service用以控制服务：
		service 服务名  start|stop|restart|status
		service network start     启动服务network
		service network stop      关闭服务network
		service netwrok restart   重启服务network
		
		或
		/etc/init.d/network restart

	不同级别的启动文件在/etc/rc.d/
	命令chkconfig用以控制一个服务是否默认启动：
		chkconfig 服务名  on|off
		chkconfig atd off       开机不自动启动atd服务
		chkconfig atd on        开机自动启动atd服务
		chkconfig --list        列出所有服务的开机启动状态

	部分非常驻服务由xinetd服务控制（不会常驻，功能较为简单的服务）
	xinetd服务配置文件保存在：
		/etc/xinetd.conf

	CentOS 6默认不会安装xinetd，需要手动安装：
		yum install xinetd



-----------------------------------------------------------

二、rSyslog日志服务

1.日志基本概念及rSyslog服务配置
	日志是系统、程序用来记录其运行状态、信息及错误的纯文本文件
	Linux系统中默认的日志服务是syslog服务
	CentOS 6/RHEL6 默认使用的日志服务是rsyslog

	Linux一般保存以下三种类型日志：
		内核信息
		服务信息
		应用程序信息

	rsyslog服务配置文件为：
		/etc/rsyslog.conf

	Linux系统中日志保存在：
		/var/log/
		我们通常使用tail -f logfile来实时监控日志文件

	日志的两个基本概念：
		Facility  定义日志信息来源
		Priority  定义日志信息类别

		Facility有以下几种：
			- kern          内核消息
			- user          用户级消息
			- mail          邮件系统消息
			- daemon        系统服务消息
			- auth          认证系统消息
			- syslog        日志系统自身消息
			- lpr           打印系统消息
			- authprlv      权限系统消息
			- cron          定时任务消息
			- news          新闻系统消息
			- uucp          uucp系统消息
			- ftp           ftp服务消息
			- local0~local7

		Priority/Severity Level（优先级）：
			- Emergency          系统已经不可用
			- Alert              必须立即进行处理
			- Critical           严重错误
			- Error              错误
			- Warning            警告
			- Notice             正常信息、但是较为重要
			- Informational      正常信息
			- Debug              debug信息

	rsyslog配置文件中的日志配置规则如下：
		facility.priority      log_location

		如：
		mail.*              -/var/log/maillog（'-'表示不必等待缓存写入硬盘，一般日志一定要等日志文件写入硬盘）
		*.info;mail.none;authpriv.none;cron.none        /var/log/message

		如果需要将日志文件发送至一个统一的日志服务器，则按如下配置：
		*.*     @192.168.1.1     （使用UDP协议发送）
		*.*     @@192.168.1.1    （使用TCP协议发送，建议使用）

-----------------------------------------------------------

三、DNS域名服务

1.DNS基础及域名系统架构
	域名是用来标识一个IP地址，因为IP地址难于记忆，所以一般使用域名代替
	一个域名代表一个IP地址
	域名分为三个部分：主机名.域名.类型(www.linuxcast.net)
	域名大小写不敏感
	DNS（Domain Name System）服务负责域名与IP地址之间的转换
	（客户端请求DNS，DNS返回域名对应的IP地址，客户端访问IP地址）

	我们日常使用的支持网络的计算机一般都是作为一个DNS客户端使用的，
	应用程序、服务、进程等通过操作系统底层的功能发起对DNS服务器的
	查询，对指定域名进行解析。

	Linux中那个使用操作系统底层提供的gethostbyname()函数进行域名解析

	Linux下域名解析可以通过以下几种方式：
		文件（/etc/hosts、/etc/networks）
		DNS
		NIS

	可以通过配置文件/etc/nsswitch.conf控制查询顺序
		hosts:files dns

	命令host、dig都不会使用/etc/nsswitch.conf的配置，
	只会通过/etc/resolv.conf进行DNS查询

	DNS是一个树状结构，查询的时候根据域名从右到左查询（完整的域名应是www.linuxcast.net.），
	每一级由一个或多个服务器负责提供信息。（根服务器，顶级域名服务器，授权服务器，资源记录服务器）

	可以用dig +trace 域名对该域名的完整查询
	dig +trace www.linuxcast.net

	DNS查询分为两种类型：
		iterative query  迭代查询
		recursive query  递归查询

	实际使用中，一般使用迭代+递归方式进行查询

	在DNS服务器上，信息以资源记录（resource record）格式保存
	一条资源记录（resource record）保存一个信息，常见的资源记录类型有：
		A        IPv4地址
		AAAA     IPv6地址
		MX       邮件记录
		CNAME    别名
		PTR      指针（用于逆向解析）
		SRV      服务资源

	DNS服务器一般分为三种类型：
		域主DNS服务器 Primary DNS Server（master）
		域从DNS服务器 Seconday DNS Server（slave）
		缓存DNS服务器 Caching only Server（Caching）

	DNS服务器中，一个域的信息保存在该域的zone配置文件中
	zone文件的格式是标准化的，一个典型的配置文件如下：

		STTL ID
		@	IN SOA @ rname.invalid.(
							0  ; serial
							1D ; refresh
							1H ; retry
							1W ; expire
							3H); minimum
				NS	@
	
				MX 10	mail.linuxcast.net
		www		IN A 192.168.1.100
		mail	IN A 192.168.1.200

	高级查询
	dig -t mx linuxcast.net（查询MX记录）
	dig -x www.linuxcast.net（逆向解析）
	dig -t soa linuxcast.net（查询SOA信息）


2.BIND服务基础及域主服务器配置
	BIND（Berkeley Internet Named Deamon）是现今使用最为广泛的DNS服务程序
	BIND默认使用TCP、UDP协议，使用端口 53（DNS）、953（rndc）

	通过yum install bind bind-chroot bind-utils来安装
	
	BIND配置文件保存在：
		/etc/named.conf    主配置文件
		/var/named/        域zone文件位置

	如果使用了chroot，BIND回被封装在一个伪目录内(/var/named/chroot/)，
	配置文件位置为：
		/var/named/chroot/etc/named.conf      BIND服务主配置文件
		/var/named/chroot/var/named/          zone文件

	bind配置文件示例保存在：
		/usr/share/doc/bind-9.8.2/sample/
		
	最小化配置如下：
	options {
		directory             "/var/named";     // 指定工作目录
		listen-on port 53     { 127.0.0.1; };   // 监听地址(IPv4)，如果有从服务器，请删除这两行
		listen-on-v6 port 53  { ::1; };         // 监听地址(IPv6)
	}

	配置一个域的主服务器需要以下步骤:
	1.在bind的主配置文件中添加该域的定义
	2.在/var/named/chroot/var/named中创建该域的zone文件
	3.编辑zone文件，添加需要的信息
	4.启动bind服务或使bind刷新配置
	5.使用host或dig命令检测域信息是否正常
	
	以linuxcast.net为例:
	配置文件位置：
	/var/named/chroot/etc/named.conf
	
	在主配置文件中添加一行域的zone定义：
	zone "linuxcast.net" {
		type master;
		file "linuxcast.net.zone";
	};
	
	zone文件位置：
	/var/named/chroot/var/named/linuxcast.net.zone
	
	zone文件内容：
		zone文件内容比较复杂，手工输入极容易输错，所以一般使用默认的
		named.localhost配置文件作为模板：
			cp named.localhost linuxcast.net.zone
			
		添加一个资源记录(RR)：
		www         IN        A        192.168.1.1
		(主机名)    (分类)    (类型)   (IP地址)
		
	启动bind服务或刷新配置：
	service named start
	service named reload
	
	将本机的dns配置指向本机：
	/etc/resolv.conf:
	nameserver  127.0.0.1
	
	使用host或dig验证dns配置：
	host www.linuxcast.net
	dig ...
	
	以下命令用以检查bind配置文件及zone文件语法：
		named-checkconf /var/named/chroot/etc/named.conf
		named-checkzone linuxcast.net /var/named/chroot/var/named/linuxcast.net.zone

3.BIND从服务器及缓存服务器配置
	一个域的从服务器（slave）通常是为了对域的主服务器（master）进行备份及负载均衡使用，
	域从服务器没有权限创建或修改域的zone文件，而是从域主服务器上抓取所属域的zone文件

	域从服务器配置步骤如下：
	1.在bind的主配置文件下添加该域的定义
	2.启动bind服务或刷新配置
	3.查看域的zone文件是否正常抓到/var/named/slaves目录中
	4.使用host或dig命令检测域信息是否正常
	
	zone定义：
	zone "linuxcast.net" {
		type slave;
		master { 192.168.1.1; };
		file "slaves/linuxcast.net.zone";
	};
	
	配置缓存服务器
	一个dns服务器可以既不是某个域的主服务器，也不是某个域的从服务器，
	一个服务器可以不包含任何域的配置信息，它将接收到的所以dns查询
	进行递归解析，将解析结果返回给查询客户端，并且将查询结果缓存下来，
	这样的服务器称之为缓存服务器(caching name server)
	
	通常在一个局域网中配置缓存服务器是为了加速网络访问。
	
	也可以为缓存服务器配置一个上游dns服务器地址（信息更全的dns服务器），缓存服务器可以给客户端
	提供一个上游dns服务器的地址：
		forwarders { 192.168.1.100; };
		
	也可以通过以下选项让服务器转发所有dns查询到forwarders服务器:
		forward only;

-----------------------------------------------------------

四、FTP共享服务

1.FTP服务原理及vsftpd服务配置
	FTP(File Transfer Protocol)协议是现今使用最为广泛的网络文件共享协议之一
	FTP使用TCP作为底层传输协议，以保证传输的可靠性，FTP占用20（data），21（command）端口

	FTP拥有两种工作模式：
		主动模式（服务端主动向客户端发起数据连接）
		被动模式（客户端主动向服务端发起数据连接，通常用在服务端与客户端间存在防火墙的情况下）

	Linux中使用最为广泛的FTP服务是vsftpd(Very Secure FTP Daemon)
	
	安装vsftpd：
	yum install vsftpd

	vsftpd相关配置文件：
		/etc/vsftpd/vsftpd.conf      vsftpd主配置文件
		/etc/vsftpd/ftpusers         黑名单
		/etc/vsftpd/user_list        控制名单（由配置文件控制是白名单还是黑名单）
		/var/ftp                     匿名共享目录（默认）
		/var/ftp/xferlog             日志文件

	vsftpd使用用户作为管理单位，想要访问某个ftp共享文件，必须以特定用户身份登陆，
	我们可以配置以下几种类型的用户：
		正常用户（系统用户）
		匿名用户（anonymous）
		虚拟用户（ftp-only）
		
	vsftpd使用系统用户作为其登陆用户，用户的家目录就是该用户的FTP根目录，默认不需要配置系统用户就可以通过vsftpd使用ftp协议访问其家目录
	vsftpd基于系统权限机制对用户进行访问控制，用户对某文件夹具有写权限，则可以通过ftp上传文件，有读权限，就可以通过ftp协议下载文件

	命令lftp默认使用匿名用户登陆：
		lftp 192.168.1.100
		
	指定登陆用户：
		lftp -u linuxcast 192.168.1.100
		
	使用get命令可以从ftp服务器上下载一个文件：
		lftp 192.168.1.100
		cd pub
		get linuxcast.tar.gz
		
	使用put命令可以将文件上传到ftp服务器：
		lftp -u linuxcast 192.168.1.100
		cd Downloads
		put linuxcast.tar.gz
		
	只要登陆用户对某个文件具有写权限，就可以进行上传操作
	
	默认vsftpd启用匿名用户，但是没有打开匿名用户上传功能，可以通过以下配置打开匿名用户上传功能：
		anonymous_enbale=YES            启用匿名用户
		anon_upload_enable=YES          启用匿名用户上传功能
		anon_mkdir_write_enbale=YES     打开匿名用户创建文件夹的功能
		
	赋予匿名用户上传使用的文件夹以写权限：
		chmod 777 /var/ftp/pub
	（不可将匿名用户家目录/var/ftp设置为777权限，只能设置子目录，否则
	  vsftpd将禁止访问匿名用户的家目录）
	  
	DropBox
	dropbox是绝大多数共享都会用到的一个机制，具有dropbox功能的目录只能上传，
	但是无法看到上传的文件。（通过权限机制实现）
	
	创建一个dropbox目录：
		mkdir dropbox
	将dropbox目录权限设为2733（具有写和执行权限-wx）：
		chmod 2733 dropbox

-----------------------------------------------------------

五、NFS共享服务

1.NFS文件共享基础及配置
	NFS（Network File System）是Linux、类Unix系统之间共享文件最常用的协议
	不同于FTP、HTTP等方式，NFS是直接共享文件系统，所以不需要预先下载，而是可以直接使用共享文件

	NFS主流使用三个版本：NFSv2、NFSv3、NFSv4
	CentOS 6/RHEL 6默认支持所有三个版本
	
	NFSv2、NFSv3默认需要使用RPC服务，所以使用NFS服务必须保证系统rpc服务打开：
		service rpcbind start
		chkconfig rpcbind on

	NFSv2、NFSv3既可以使用TCP协议进行传输，也可用UDP（不保证传输可靠性）
	NFSv4使用TCP协议进行传输
	
	NFS服务默认安装，通过以下命令可以启动：
		service nfs start
		chkconfig nfs on
		
	NFSv4不再需要RPC支持，并且是防火墙友好的
	默认NFS占用5个端口，1个NFS端口（2049），四个动态端口（无法通过防火墙）
	我们可以通过NFS配置文件固定这些动态端口，以在有防火墙的环境下使用

	配置文件：
		/etc/sysconfig/nfs

	配置：
		mountd_port = "4001"       挂载使用端口
		statd_port = "4002"        共享状态使用端口
		lockd_tcpport= "4003"      TCP锁端口
		lockd_udpport= "4004"      UDP锁端口
		
		以及NFS协议的2049端口，RPC的111端口（固定的）

	NFS共享配置文件为：
		/etc/exports

	共享配置格式为：
		共享路径           客户端列表（NFS共享参数）
		/linuxcast-nfs     192.168.1.0/24(rw,sync)

	命令exportfs可以刷新或显示共享信息：
		exportfs -r    刷新共享配置
		exportfs -v    显示当前共享配置

	常用NFS共享参数：
		默认选项
		- ro              只读共享
		- sync            所有操作返回前必须已经写入磁盘
		- wdelay          延迟写操作，等待更多的写操作一起执行
		- root_squash     防止远程root用户使用root权限对共享进行访问
		
		常用选项
		- rw               读写共享
		- async            操作可以延迟写入硬盘，立即响应，可提高速度
		- no_wdelay        关闭延迟，需要sync选项同时使用
		- no_root_squash   关闭root_squash
		
	
	
	客户端挂载NFS共享目录
	命令如下：
		mount -t nfs 192.168.1.100:/home/dragonite/Public  /temp
		
	将配置写入/etc/fstab中，在启动时自动挂载：
		192.168.1.100:/linuxcast-nfs  /mnt  nfs   default  0 0
		
	挂载是可以使用-o指定挂载选项，常用选项如下：
		- ro        只读挂载
		- rw        读写挂载
		- vers=4    指定使用NFSv4方式挂载

-----------------------------------------------------------

六、SMB共享服务

1.SMB文件共享原理及配置
	SMB（Server Message Block）是windows系统共享文件主要使用的协议
	在Linux系统或类Unix系统中，我们可以使用samba程序实现SMB协议，为windows设备提供共享服务
	
	samba服务是SMB协议的一个开源实现，具有以下主要功能：
		通过SMB协议进行文件共享
		通过SMB协议进行打印共享
		加入一个windows 2000/2003/2008域环境
		通过windows 域环境进行认证

	SMB协议又称之为CIFS（Comman Internet File System）协议
	
	安装samba
	yum install samba
	
	samba包含三个服务：
		smbd         提供文件及打印共享功能，使用139、445端口
		nmbd         提供NetBIOS支持，使用137端口
		winbindd     提供针对windows 2000/2003/2008的用户及组信息的解析功能

		winbindd服务需要单独安装:
			yum install samba-winbind
		
	一般文件共享只使用到smbd服务
	
	samba有两种安全模式：
		user-level   任何共享都需要一个用户名、密码进行认证（默认）
		share-level  只需要密码（或者匿名）就可以访问共享，但与一些windows客户端有兼容性问题

	samba主配置文件保存在：
		/etc/samba/smb.conf

	配置文件分为三个部分：
		[global]     samba全局配置
		[homes]      用户家目录共享配置
		[printers]   打印共享配置

	global配置如下：
		配置工作组信息：
		workgroup = LINUXCAST
		server string = This is ....
		
		配置安全模式：
		security = user
		支持的安全模式：
			- user     默认
			- share    创建匿名共享
			- domain
			- ads
			- server
			
	homes配置如下：
		comment = Home Directories
		browsable = no
		writable = yes

		为要通过smb协议访问家目录的用户创建samba密码：
			smbpasswd -a linuxcast
			
		启动samba服务
			service smb start

	在配置文件最后追加以下
	通过以下配置可创建一个独立samba共享：
		[linuxcast-smb]
		comment = This is a LinuxCast.net samba share
		path = /linuxcast-smb               共享路径
		valid users = linuxcast nash_su     可用用户
		public = no                         是否为开放共享 
		browsable = yes                     是否可浏览
		writable = yes                      是否可写
		create mask = 0765                  默认创建文件权限
		
	创建匿名共享：
		[global]
		security = share
	
		[linuxcast-pub]
		comment = ....
		path = /linuxcast-pub
		public = yes
		writable = yes
		guest ok = yes

	命令testparm可用来检测samba配置文件语法

	命令smbclient可以用来查看一个指定服务器都有哪些共享：
		smbclient -L 192.168.1.100 -U linuxcast
		smbclient -L 192.168.1.100
		
		
	客户端
	windows客户端直接在文件地址栏输入服务端地址链接即可：
	\\192.168.1.100\linuxcast-smb
	
	Linux或类Unix系统图形界面使用以下方式连接：
	smb://192.168.1.100/linuxcast-smb
	
	Linux在CLI下可使用smbclient命令连接：
	smbclient //192.168.1.100/linuxcast-smb -U linuxcast
	
	也可通过mount命令挂载smb共享：
	monut -t clfs //192.168.1.100/linuxcast-smb /mnt -o username=linuxcast,password='...'

-----------------------------------------------------------

七、Web服务 - Apache

1.Web服务原理、HTTP协议
	Web服务分为服务端和客户端(C/S)
	客户端就是我们使用的浏览器
	服务端就是我们所访问网站的Web服务，常见的Web服务程序有：
	IIS、Apache、Nginx、Lighttpd等，不同Web服务程序针对不同
	的系统平台，有各自的优缺点
	
	Web服务使用HTTP协议(Hypertext Transfer Protocol)进行通信
	当前使用的最多的HTTP版本是HTTP/1.1
	HTTP使用TCP协议，默认端口是80
	
	web浏览器    --------------->    Web服务器(Nginx)
	             <---------------
	port: >1024                      port: 80

	HTTP协议常用的方法有：
		GET      从服务器上获取一个资源（一般是网页）
		POST     向服务器发送数据（一般会创建一个新的资源）
		PUT      向服务器发送数据
		DELETE   删除一个资源
		HEAD     获取资源的头部信息

	HTTP常见状态码：
		200    正常，请求成功
		301    永久移动，一般用于域名重定向
		304    资源未修改，一般用于缓存
		401    禁止访问，未授权
		403    禁止访问，一般代表没有权限
		404    所访问资源不存在 
		500    服务器内部错误
		
	Web服务架构
	因为存在静态页面（如HTML）和动态页面（如php），所以现代Web服务
	架构也可分为Web服务器和应用服务器
	
	严格意义上的Web服务器只通过http协议向外提供html、css等网页资源
	
	而动态语言一般需要专门的应用服务器进行云计算，因为动态语言是需
	要进行计算处理后生成html代码的
	                    HTTP
	web browser    --------------->    Web Server + App Server + Database Server
	               <---------------

2.Apache服务基础配置
	apache是Linux中最为老牌的web服务器程序

	apache具有以下特点：
		动态的、预创建的进程
		动态模块加载
		虚拟主机
		SSL(https加密)

	Apache提供的Web服务默认使用80端口（http）和443端口（https）
		
	安装Apache
		yum install httpd
	
	启动Apache
		service httpd start
		
	apache默认配置文件保存在：
		/etc/httpd/conf/httpd.conf

	模块配置文件保存在：
		/etc/httpd/conf.d/

	默认apache日志保存在：
		/var/log/httpd/

	apache默认网站根目录为：
	/var/www/html

	常用配置如下：
		KeepAlive off                      TCP持续连接配置
		MaxKeepAliveRequests 100           一个TCP连接允许的最大请求数
		KeepAliveTimeout 15                一个TCP连接最长空闲时间
		Listen 80                          默认监听端口	
		User apache                        apache服务所使用用户
		Group apache                       apache服务所使用组
		ServerAdmin root@linuxcast.net     管理员邮箱
		DocumentRoot "/var/www/html"       网站根目录
		<Directory "/var/www/html">
		</Directory>
		DirectoryIndex index.html index.html.var                 默认首页
		LoadModule auth_basic_module modules/mod_auth_basic.so   模块加载

		一般只需修改监听端口、管理员邮箱、ServerName、网站目录
		
		对配置文件语法检查：
			service httpd configtest
			apachectl configtest
			httpd -t
		
3.Apache服务配置-虚拟主机
	默认Apache的配置只提供一个网络服务，但是我们可以配置一台Apache
	服务器为多个网站提供服务，我们称之为虚拟主机
	
	虚拟主机分为两种：
		基于域名的虚拟主机
		基于IP地址的虚拟主机

	SSL网站只能使用基于IP的虚拟主机

	apache虚拟主机配置如下：
		NameVirtualHost *:80
		
		<VirtualHost *:80>
			ServerName www1.linuxcast.net
			ServerAdmin root@linuxcast.net
			DocumentRoot /var/www/linuxcast-1
		</VirtualHost>

		<VirtualHost *:80>
			ServerName www2.linuxcast.net
			ServerAdmin root@linuxcast.net
			DocumentRoot /var/www/linuxcast-2
		</VirtualHost> 

4.Apache服务配置-HTTP认证
	HTTP简单认证用来对某些目录中的网页进行访问控制，当用户访问这些页面的时候需要输入用户名密码进行认证
	安全性较低（不经加密）
	
	配置apache实现HTTP简单认证需要以下两个步骤：
	(1) 创建认证使用的用户名密码数据库：
		htpasswd -cm /etc/httpd/.htpasswd linuxcast
		htpasswd -m /etc/httpd/.htpasswd nash_su
	(2) 对指定目录打开认证功能：
		<Directory /var/www/linuxcast-1>
			AuthName “LinuxCast Auth” 
			AuthType basic
			AuthUserFile /etc/httpd/.htpasswd
			Require valid-user
		</Directory>

-----------------------------------------------------------

八、电子邮件服务

1.邮件服务原理及架构
	电子邮件基本概念：
		四个组成部分
		MUA（Mail User Agent）       接收邮件所使用的邮件客户端，使用IMAP或POP3协议与服务器通信
		MTA（Mail Transfer Agent）   通过SMTP发送、转发邮件
		MDA（Mail Deliver Agent）    将MTA接收到的邮件保存到磁盘或指定地方，通常会进行垃圾邮件及病毒扫描
		MRA（Mail Receive Agent）    负责实现IMAP与POP3协议，与MUA进行交互
		
		三个重要协议
		SMTP（Simple Mail Transfer Protocol）     传输发送邮件所使用的标准协议
		IMAP（Internet Message Access Protocol）  接收邮件使用的标准协议之一
		POP3（Post Office Protocol 3）            接收邮件使用的标准协议之一

		IMAP主要优势在于客户端的所以操作都与邮件服务器同步，而POP3
		则是将邮件下载下来，所以操作都在本地，不影响服务器上保存的邮件
		
		IMAP的用户体验更好
		
	MUA称之为邮件用户代理，用户通过MUA接收邮件
	常用的MUA有：outlook、thunderbird、Mac Mail、mutt
	通过网页方式查看电子邮件，我们可称为基于Web的MUA
	
	MTA通过SMTP协议与邮件服务器通信，实现邮件发送	
	常用的MTA服务有：sendmail、postfix
	MTA只负责邮件传输，邮件保存是由MDA完成的
	
	MDA负责将MTA接收到的邮件保存在邮件服务器上，通常MTA和MDA是紧紧结合在一起的
	Linux上邮件默认保存目录在/var/spool/mail/username
	MDA除了负责保存邮件，更重要的是对邮件进行垃圾邮件处理和病毒扫描
	常用的MDA有：procmail、maildrop
	sendmail和postfix默认使用的MDA是procmail
	
	MRA实现IMAP和POP3等协议，负责与MUA交互，将服务器上的邮件通过IMAP或POP3协议递送给客户端
	常用的MRA有：dovecot
	为了安全起见，现代邮件系统一般会使用数字证书对传输协议进行加密，
	所以MRA一般需要支持的协议有IMAP、POP3、IMAPS、POP3S
	
	电子邮件系统架构：
	
	        2.UDP           3.SMTP               4.
	DNS <----------  MTA ------------> MTA ------------> MDA
	                  ^                                   |
					  |						7.			  V  5.
	                  |                MRA ----> /var/spool/mail/username
	                  |                 ^       
					  |                 |
	                  | 1.SMTP          | 6.IMAP/POP3
	                  |                 |
	                 MUA               MUA
					 
	电子邮件地址格式有两种：
		nash_su@mail.linuxcast.net
		(用户名)    (邮件服务器主机名)
		
		nasu_su@linuxcast.net
		(用户名)  (域名)
		
	最常用的是第二种，这种形式的邮件地址因为为指定该域的邮件服务器，所以必须对该
	域进行DNS查询，查询该域的MX记录，找出该域的邮件服务器之后，才能够发送邮件

2.Postfix邮件服务基础配置
	Postfix是Linux下最为流行的邮件服务器，Postfix是MTA的一种实现，最初的开发目的是为了改良sendmail，现在逐渐成为的Linux下的主流的邮件服务器

	Postfix的优势有：
		postfix速度比sendmail快三倍
		兼容sendmail
		更加稳定健壮
		配置更加简单灵活
		大多数postfix进程运行权限较低，所以安全性较高

	Linux系统一般会默认安装postfix服务，并且作为系统内用户之间使用的通信方式
		yum install postfix

	postfix配置文件保存在：
		/etc/postfix/
		
		主配置文件为/etc/postfix/main.cf
		
	postfix默认使用TCP的25端口(SMTP)
	
	postfix默认启动，但是只为本机提供服务，本机的用户之间可以通过各种MUA相互发送邮件
		netstat -tupin | grep master
		
	我们可以通过以下命令发送邮件：
		mail -vs "test mail from linuxcast" root@mail.linuxcast.net
		然后输入内容，完后按Ctrl+D
		
	通过mail邮件可以查看用户的邮箱(/var/spool/mail/root)

	一般我们不直接修改postfix配置文件，而是通过postconf命令进行配置：
		postconf -d    显示缺省配置 
		postconf -n    显示当前配置
		postconf -e "key = value"    修改一个配置

		常用配置参数：
		postconf -e "inet_interfaces = all"     配置postfix监听所有接口
		postconf -e "myhostname = training.linuxcast.net"    配置本机主机名
		postconf -e "mydomain = linuxcast.net"    配置postfix所服务的域的域名
		postconf -e "mydestination = $myhostname,$mydomain"   配置postfix允许接收的邮件的目标地址
		postconf -e "myorigin = $mydomain"    配置地址伪装（将发出邮件的发件人伪装为用户名@域名的形式）
		postconf -e "masquerade_exceptions = root"  配置哪些用户不进行地址伪装
		postconf -e "mynetworks = 127.0.0.0/8"    配置那些网络地址可以不进行认证就可转发邮件

	查看当前邮件发送队列：
		postqueue -p
	
	刷新当前邮件发送队列：
		postqueue -f

	邮件服务默认日志为：
		/var/log/maillog













