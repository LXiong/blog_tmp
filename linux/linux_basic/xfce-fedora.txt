

在 win 下用 UltraISO 制作启动盘
记住修改 syslinux.cfg 和 isolinux.cfg 的fedora label
root=live:CDLABEL=Fedora-Live-Xfce-x86_64-20-1
修改为u盘的label名字

VirtualBox 安装增强功能包:






64 bits

/boot   300 MB
/       5000 MB
/usr    20000 MB
/var    10000 MB
/home   100000 MB
swap    2000 MB

biosboot  2 MB



环境变量
~/.bashrc
source .bashrc

fedora启动服务
systemctl status httpd.service



--------------------------------------------------------------------------------

yum install wget


跟新yum源

http://mirrors.163.com/
http://mirrors.sohu.com/


cd /etc/yum.repos.d/
wget http://mirrors.163.com/.help/fedora-163.repo
wget http://mirrors.163.com/.help/fedora-updates-163.repo
wget http://mirrors.sohu.com/help/fedora-sohu.repo
wget http://mirrors.sohu.com/help/fedora-updates-sohu.repo

yum makecache


当YUM源很多时，安装fastestmirror插件可以使得yum从速度最快的yum源下载。
yum install yum-plugin-fastestmirror


到下面网站下载fedora的free和nonfree的rpm包
http://rpmfusion.org/Configuration

rpm -ivh ...




lspci -v
(VGA)

gtf 1440 900 60

# 1440x900 @ 60.00 Hz (GTF) hsync: 55.92 kHz; pclk: 106.47 MHz
  Modeline "1440x900_60.00"  106.47  1440 1520 1672 1904  900 901 904 932  -HSync +Vsync


http://www.linuxidc.com/Linux/2010-10/29006.htm

如果显示有问题，到下面看看
cd /etc/X11/

ctrl+alt+backspace
startx




xxxxxx不要阿


显卡
yum install akmod-nvidia

yum remove *nvidia*

lsmod | grep nouveau


--------------------------------------------------------------------------------

版本升级

yum --enablerepo=updates-testing install fedup
yum update
reboot

升级到fedora 20 前将其他的一些源禁止掉

sudo yum update fedup fedora-release
fedup --network 20(此处20为升级的版本)
reboot

要看一下：
https://fedoraproject.org/wiki/Common_F20_bugs#Upgrade_issues
确保/boot有足够的大小(100 MB左右)

https://fedoraproject.org/wiki/FedUp#How_Can_I_Upgrade_My_System_with_FedUp.3F

yum distribution-synchronization --disablepresto
fedora 20要重装Chrome
yum remove google-chrome-\* && yum install google-chrome-[beta,stable,unstable]

--------------------------------------------------------------------------------

yum update
yum-complete-transaction
yum install gcc gcc-c++ gdb kernel-devel valgrind

yum clean all


arm-none-linux-gnueabi:

yum install glibc.i686

-----------------------------

un-test

删除多余内核

1. 查看当前系统中已安装的内核相关包：
# rpm -qa | grep kernel

2. 查看当前使用的内核：
# uname -r

3. 确定要删除的内核：

4. 删除内核：
# yum remove kernel-...（内核版本名称）

使用 yum remove 进行删除，会自动移除：/boot/grub/menu.lst 中的相关启动项。

--------------------------------------------------------------------------------

yum install gedit
yum install system-config-date
yum install gnome-system-monitor
yum install vim
yum install wireshark wireshark-gnome

yum install p7zip unrar
unrar x test.rar


yum install lm_sensors
sensors-detect


(no root & under root)
cp /etc/vimrc ~/.vimrc
vi ~/.vimrc

Add these:

" vim settings
" 制表符为4
set tabstop=4
" 统一缩进为4
set softtabstop=4
set shiftwidth=4
" 显示行号
set number
" 不要备份文件
set nobackup
" 继承前一行的缩进方式
set autoindent
" 自动缩进
set smartindent
" 使用C样式的缩进
set cindent
" 不要用空格代替制表符
set noexpandtab
set ruler
set showmode
syntax on



修改主机名:
hostnamectl set-hostname XXX-XXX



自动挂载:

fdisk -l

cd /mnt
mkdir window
mkdir linux

vim /etc/fstab

/dev/sdb5    /mnt/window    ntfs    defaults    0 0
/dev/sda8    /mnt/linux     ntfs    defaults    0 0


window 主机 Linux虚拟机 内设置共享文件夹
vbox先设置共享文件夹路径，然后 linux 设置挂载：
mount -t vboxsf vbox_share /mnt/share

umount -f /mnt/share

设置 fstab文件
vbox_share /mnt/share vboxsf rw, gid=1000, uid=1000, auto 0 0

vbox_share /home/dragonite/Public/share vboxsf defaults 0 0

fedora 下不成功
比较犯贱的方法，写个XXX.sh脚本放到 init.d 里面
执行 update-rc.d XXX.sh defaults

--------------------------------------------------------------------------------

修改hosts
http://blog.sina.com.cn/s/blog_4d8713560100ygec.html （刘冰芍）

gedit /etc/hosts




google-chrome:


vim /etc/yum.repos.d/google.repo

[google-chrome]
name=Google-Chrome - x86_64
baseurl=http://dl.google.com/linux/chrome/rpm/stable/x86_64
enabled=1
gpgcheck=1
gpgkey=https://dl-ssl.google.com/linux/linux_signing_key.pub


yum makecache
yum install google-chrome-stable



--------------------------------------------------------------------------------

java:


Android:
yum install libz.so.1
yum install libncurses.so.5

--------------------------------------------------------------------------------

qt:


yum install libX*


编译MySQl驱动
mysql位置
/usr/include/mysql
/usr/lib64/mysql


cd $QTDIR/src/plugins/sqldrivers/mysql
qmake "INCLUDEPATH+=/usr/include/mysql" "LIBS+=-L/usr/lib64/mysql \
    -lmysqlclient_r" mysql.pro
make
make install



------

源码阅读
yum install kscope


--------------------------------------------------------------------------------


virtual-box:

yum install SDL
rpm -ivh xxx.rpm


yum install dkms
/etc/init.d/vboxdrv setup

yum remove VirtualBox-version
 

--------------------------------------------------------------------------------

pdf:

yum install evince
yum install okular

epub:
yum install calibre



office:

yum install libreoffice
wps


--------------------------------------------------------------------------------


iptables -I INPUT -p all -s 192.168.2.0/24 -j ACCEPT
service iptables save

(/etc/sysconfig/iptables)



yum install samba

samba

vim /etc/samba/smb.conf

ex:
[window-smb]
        comment = window-smb
        path = /mnt/window
        valid users = dragonite
        public = no
        browseable = yes
        writable = yes

testparm

smbpasswd -a dragonite
service smb start



首先要确认双方都能ping通
fedora要关selinux和iptables
window要打开防火墙的打印机服务smb

setenforce 0
iptables -F

--------------------------------------------------------------------------------

GtkTerm




lsusb



开发者经常要使用到的，我们有些时候需要使用windows开发，然而window装在了虚拟机中，
我们怎么样在虚拟机中使用串口呢？

1、在Virtualbox中选择启用串口，端口模式选择Host device（主机设备）。
由于现有两个系统但是只有一个物理串口，所以虚拟机要通过主机的串口文件间接获取数据，主机是linux，
串口设备为/dev/ttyS0

2、端口/文件位置一栏填入：/dev/ttyS0，启动虚拟机。

3、如果无法启动虚拟机，很有可能是没有对ttyS0设备的读写权限，（可以ls  -l /dev/ttyS0查看以下权限）
于是我们要修改ttyS0的权限，在终端中输入:sudo chmod 777 /dev/ttyS0
这样就将ttyS0的所有权限都打开了。启动虚拟机，这时候就可以在虚拟机中（winXP）使用串口了。
如果在虚拟机中（winXP）设备中还是找不到串口COM1，则进入控制面板-->添加硬件，选择 “是，
我已经连接了此硬件” --> "添加新的硬件设备" --> "搜索并自动安装硬件"，有时这样即可自动检测出COM1并安装。




更新：
window主机下设置VirtualBox串口
端口编号 -> 选择相应的端口，比如COM1
端口模式 -> 选择 主机设备
端口/文件位置 -> 填相应的端口，比如上面的端口编号选了 COM1，则这里填 COM1
在系统设置里可能需要勾选 启用I/O APIC


linux主机下设置VirtualBox串口




PS：串口能用，但usb不行

串口

ttyS0
ttyUSB0
等要chmod




--------------------------------------------------------------------------------

重编内核

http://www.kernel.org

linux-version.tar.xz

xz -d linux-version.tar.xz
tar -xvf linux-version.tar



.config文件位于/boot


Local version:
-dragonite.....

yum install ncurses-devel
make menuconfig

make bzImage

编译完成
Kernel: arch/x86/boot/bzImage is ready  (#1)


make modules
make modules_install
mkinitrd initrd-$version $version
cp initrd-$version /boot
($version可以通过查询/lib/modules下的目录得到)
(mkinitrd /boot/initrd-3.10.17dragonite-fedora-x86_64 3.10.17)

make install





grub:

vim /boot/grub2/grub.cfg
# It is automatically generated by grub2-mkconfig using templates
# from /etc/grub.d and settings from /etc/default/grub




打开/etc/default/grub,修改GRUB_TIMEOUT的值
GRUB_TIMEOUT=5 //默认为5秒

grub2-editenv list  //查询默认启动项


配置完成后需要更新配置，新配置才能生效，命令如下：
grub2-mkconfig -o /boot/grub2/grub.cfg


--------------------------------------------------------------------------------

Apache

yum install -y httpd


MariaDB + php + phpmyadmin

yum install mariadb mariadb-server mariadb-bench mariadb-devel mariadb-libs
yum install php phpmyadmin
mysql_secure_installation


systemctl status mysqld.service

General Access:
mysql -u root -p

sqlite is already installed

yum install sqlite-devel



ssh:
yum install openssh-server openssh-clients

--------------------------------------------------------------------------------


yum install mplayer mplayer-gui

I think vlc is better:
yum install vlc


--------------------------------------------------------

GoAgent
https://code.google.com/p/goagent/

yum install python-devel
yum install pyOpenSSL


------------------------

Python

python IDE:
yum insatll spyder

install idle:

yum install tk-devel
./configure
make
make install


version:
python -V

Python 2 install Tkinter(Fedora):
# yum install ScientificPython-tk

and use:
>>> import Tkinter

Install Pip:
yum install python-pip

Install swampy:
pip install swampy

pip install package --upgrade
pip uninstall package

Python3:
# yum install python3-tkinter

--------------------------------------------------------------------------------
一些网络软件

wireshare
nmap
netcat

--------------------------------------------------------------------------------

TeamViewer:

yum localinstall teamviewer_linux.rpm
yum -ivh teamviewer_linux.rpm


(应该不用)
安装配置文件
sudo cp /opt/teamviewer8/tv_bin/script/teamviewerd.service /lib/systemd/system/

设置开机启动
sudo systemctl enable teamviewerd.service

现在启动：
sudo systemctl start teamviewerd.service

查看启动状态：
sudo systemctl status teamviewerd.service

--------------------------------------------------------------------------------

FileZilla

yum install filezilla




