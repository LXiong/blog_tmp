

在 win 下用 UltraISO 制作启动盘
记住修改 syslinux.cfg 和 isolinux.cfg 的fedora label
root=live:CDLABEL=Fedora-Live-Xfce-x86_64-20-1
修改为u盘的label名字

VirtualBox 安装增强功能包:






64 bits

/boot   300 MB
/       5000 MB
/usr    20000 MB
/var    10000 MB
/home   100000 MB
swap    2000 MB

biosboot  2 MB



环境变量
~/.bashrc
source .bashrc

export PATH=$PATH:/....

fedora启动服务
systemctl status httpd.service



--------------------------------------------------------------------------------

yum install wget


跟新yum源

http://mirrors.163.com/
http://mirrors.sohu.com/


cd /etc/yum.repos.d/
wget http://mirrors.163.com/.help/fedora-163.repo
wget http://mirrors.163.com/.help/fedora-updates-163.repo
wget http://mirrors.sohu.com/help/fedora-sohu.repo
wget http://mirrors.sohu.com/help/fedora-updates-sohu.repo

yum makecache


当YUM源很多时，安装fastestmirror插件可以使得yum从速度最快的yum源下载。
yum install yum-plugin-fastestmirror


到下面网站下载fedora的free和nonfree的rpm包
http://rpmfusion.org/Configuration

rpm -ivh ...




lspci -v
(VGA)

gtf 1440 900 60

# 1440x900 @ 60.00 Hz (GTF) hsync: 55.92 kHz; pclk: 106.47 MHz
  Modeline "1440x900_60.00"  106.47  1440 1520 1672 1904  900 901 904 932  -HSync +Vsync


http://www.linuxidc.com/Linux/2010-10/29006.htm

如果显示有问题，到下面看看
cd /etc/X11/

ctrl+alt+backspace
startx




xxxxxx不要阿


显卡
yum install akmod-nvidia

yum remove *nvidia*

lsmod | grep nouveau


--------------------------------------------------------------------------------

版本升级

yum --enablerepo=updates-testing install fedup
yum update
reboot

升级到fedora 20 前将其他的一些源禁止掉

sudo yum update fedup fedora-release
fedup --network 20(此处20为升级的版本)
reboot

要看一下：
https://fedoraproject.org/wiki/Common_F20_bugs#Upgrade_issues
确保/boot有足够的大小(100 MB左右)

https://fedoraproject.org/wiki/FedUp#How_Can_I_Upgrade_My_System_with_FedUp.3F

yum distribution-synchronization --disablepresto
fedora 20要重装Chrome
yum remove google-chrome-\* && yum install google-chrome-[beta,stable,unstable]

--------------------------------------------------------------------------------

yum update
yum-complete-transaction
yum install gcc gcc-c++ gdb kernel-devel valgrind

yum clean all


arm-none-linux-gnueabi:

yum install glibc.i686

-----------------------------

un-test

删除多余内核

1. 查看当前系统中已安装的内核相关包：
# rpm -qa | grep kernel

2. 查看当前使用的内核：
# uname -r

3. 确定要删除的内核：

4. 删除内核：
# yum remove kernel-...（内核版本名称）

使用 yum remove 进行删除，会自动移除：/boot/grub/menu.lst 中的相关启动项。

--------------------------------------------------------------------------------

yum install gedit
yum install system-config-date
yum install gnome-system-monitor
yum install vim
yum install wireshark wireshark-gnome

yum install p7zip unrar
unrar x test.rar


yum install lm_sensors
sensors-detect


(no root & under root)
cp /etc/vimrc ~/.vimrc
vi ~/.vimrc

Add these:

" vim settings
" 制表符为4
set tabstop=4
" 统一缩进为4
set softtabstop=4
set shiftwidth=4
" 显示行号
set number
" 不要备份文件
set nobackup
" 继承前一行的缩进方式
set autoindent
" 自动缩进
set smartindent
" 使用C样式的缩进
set cindent
" 不要用空格代替制表符
set noexpandtab
set ruler
set showmode
syntax on



修改主机名:
hostnamectl set-hostname XXX-XXX



自动挂载:

fdisk -l

cd /mnt
mkdir window
mkdir linux

vim /etc/fstab

/dev/sdb5    /mnt/window    ntfs    defaults    0 0
/dev/sda8    /mnt/linux     ntfs    defaults    0 0


window 主机 Linux虚拟机 内设置共享文件夹
vbox先设置共享文件夹路径，然后 linux 设置挂载：
mount -t vboxsf vbox_share /mnt/share

umount -f /mnt/share

设置 fstab文件
vbox_share /mnt/share vboxsf rw, gid=1000, uid=1000, auto 0 0

vbox_share /home/dragonite/Public/share vboxsf defaults 0 0

fedora 下不成功
比较犯贱的方法，写个XXX.sh脚本放到 init.d 里面
执行 update-rc.d XXX.sh defaults

--------------------------------------------------------------------------------

修改hosts
http://blog.sina.com.cn/s/blog_4d8713560100ygec.html （刘冰芍）

gedit /etc/hosts




google-chrome:


vim /etc/yum.repos.d/google.repo

[google-chrome]
name=Google-Chrome - x86_64
baseurl=http://dl.google.com/linux/chrome/rpm/stable/x86_64
enabled=1
gpgcheck=1
gpgkey=https://dl-ssl.google.com/linux/linux_signing_key.pub


yum makecache
yum install google-chrome-stable



--------------------------------------------------------------------------------

java:


Android:
yum install libz.so.1
yum install libncurses.so.5

--------------------------------------------------------------------------------

qt:

安装OpenGL环境
yum install mesa* 
yum install mesa-libGL-devel mesa-libGLU-devel
yum install freeglut-devel


出现 Basic XLib functionality test failed! 
(原因在于没有安装libX11的开发包，貌似安装libX11-dev,libXext-dev,libXtst-dev三个包
即可，我这里简单点全部安装了)
解决方法
yum install libX*

出现 The test for linking against libxcb and support libraries failed!
(qtbase/src/plugins/platforms/xcb/README lists the required packages.)


cd qt-everywhere-opensource-src-XXX
./configure -prefix /usr/local/Trolltech/Qt-X.X.X
make
make install
(To reconfigure, run 'gmake confclean' and 'configure'.)


Set the environment path:
vim ~/.bashrc
# Qt
PATH=$PATH:/usr/local/Trolltech/Qt-4.8.6/bin
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/Trolltech/Qt-4.8.6/lib

source ~/.bashrc


编译MySQl驱动
mysql位置
/usr/include/mysql
/usr/lib64/mysql


cd $QTDIR/src/plugins/sqldrivers/mysql
qmake "INCLUDEPATH+=/usr/include/mysql" "LIBS+=-L/usr/lib64/mysql \
    -lmysqlclient_r" mysql.pro
make
make install



------

源码阅读
yum install kscope


--------------------------------------------------------------------------------


virtual-box:

yum install SDL
rpm -ivh xxx.rpm


yum install dkms
/etc/init.d/vboxdrv setup

yum remove VirtualBox-version
 

--------------------------------------------------------------------------------

pdf:

yum install evince
或
yum install okular

epub:
yum install calibre



office:

yum install libreoffice
wps


--------------------------------------------------------------------------------


iptables -I INPUT -p all -s 192.168.2.0/24 -j ACCEPT
service iptables save

(/etc/sysconfig/iptables)



yum install samba

samba

vim /etc/samba/smb.conf

ex:
[window-smb]
        comment = window-smb
        path = /mnt/window
        valid users = dragonite
        public = no
        browseable = yes
        writable = yes

testparm

smbpasswd -a dragonite
service smb start



首先要确认双方都能ping通
fedora要关selinux和iptables
window要打开防火墙的打印机服务smb

setenforce 0
iptables -F

--------------------------------------------------------------------------------

GtkTerm
minicom

yum install gtkterm



yum install minicom
初始设置:(要在root下设置)
minicom -s

选择Serial port setup
串口COM1对应ttyS0
波特率选为115200 8N1（数据位8，奇偶校验无，停止位1)
硬/软件流控制分别键入"F"和"G"，并且都选No
将其保存为默认配置（即save setup as dfl）
选择"Exit from Minicom"命令退出


lsusb



开发者经常要使用到的，我们有些时候需要使用windows开发，然而window装在了虚拟机中，
我们怎么样在虚拟机中使用串口呢？

1、在Virtualbox中选择启用串口，端口模式选择Host device（主机设备）。
由于现有两个系统但是只有一个物理串口，所以虚拟机要通过主机的串口文件间接获取数据，主机是linux，
串口设备为/dev/ttyS0

2、端口/文件位置一栏填入：/dev/ttyS0，启动虚拟机。

3、如果无法启动虚拟机，很有可能是没有对ttyS0设备的读写权限，（可以ls  -l /dev/ttyS0查看以下权限）
于是我们要修改ttyS0的权限，在终端中输入:sudo chmod 777 /dev/ttyS0
这样就将ttyS0的所有权限都打开了。启动虚拟机，这时候就可以在虚拟机中（winXP）使用串口了。
如果在虚拟机中（winXP）设备中还是找不到串口COM1，则进入控制面板-->添加硬件，选择 “是，
我已经连接了此硬件” --> "添加新的硬件设备" --> "搜索并自动安装硬件"，有时这样即可自动检测出COM1并安装。




更新：
window主机下设置VirtualBox串口
端口编号 -> 选择相应的端口，比如COM1
端口模式 -> 选择 主机设备
端口/文件位置 -> 填相应的端口，比如上面的端口编号选了 COM1，则这里填 COM1
在系统设置里可能需要勾选 启用I/O APIC




linux主机下设置VirtualBox串口




PS：串口能用，但usb不行

串口

ttyS0
ttyUSB0
等要chmod




--------------------------------------------------------------------------------

重编内核

http://www.kernel.org

linux-version.tar.xz

xz -d linux-version.tar.xz
tar -xvf linux-version.tar



.config文件位于/boot


Local version:
-dragonite.....

yum install ncurses-devel
make menuconfig

make bzImage

编译完成
Kernel: arch/x86/boot/bzImage is ready  (#1)


make modules
make modules_install
mkinitrd initrd-$version $version
cp initrd-$version /boot
($version可以通过查询/lib/modules下的目录得到)
(mkinitrd /boot/initrd-3.10.17dragonite-fedora-x86_64 3.10.17)

make install





grub:

vim /boot/grub2/grub.cfg
# It is automatically generated by grub2-mkconfig using templates
# from /etc/grub.d and settings from /etc/default/grub




打开/etc/default/grub,修改GRUB_TIMEOUT的值
GRUB_TIMEOUT=5 //默认为5秒

grub2-editenv list  //查询默认启动项


配置完成后需要更新配置，新配置才能生效，命令如下：
grub2-mkconfig -o /boot/grub2/grub.cfg


--------------------------------------------------------------------------------

Apache

yum install -y httpd


MariaDB + php + phpmyadmin

yum install mariadb mariadb-server mariadb-bench mariadb-devel mariadb-libs
yum install php phpmyadmin
mysql_secure_installation


systemctl status mysqld.service

General Access:
mysql -u root -p

sqlite is already installed

yum install sqlite-devel


ssh:
yum install openssh-server openssh-clients

开机启动ssh

查看开机启动列表
chkconfig --lis

查看sshd
chkconfig --lis | grep sshd
显示
sshd           	0:off	1:off	2:off	3:off	4:off	5:off	6:off

使用如下命令设置sshd服务自动启动：
# chkconfig --level 5 sshd on



在CentOS系统下，主要有两种方法设置自己安装的程序开机启动。
1、把启动程序的命令添加到/etc/rc.d/rc.local文件中，比如下面的是设置开机启动httpd。
#!/bin/sh
#
# This script will be executed *after* all the other init scripts.
# You can put your own initialization stuff in here if you don't
# want to do the full Sys V style init stuff.
 
touch /var/lock/subsys/local
/usr/local/apache/bin/apachectl start
2、把写好的启动脚本添加到目录/etc/rc.d/init.d/，然后使用命令chkconfig设置开机启动。
例如：我们把httpd的脚本写好后放进/etc/rc.d/init.d/目录，使用
chkconfig --add httpd
chkconfig httpd on
命令即设置好了开机启动。



配置SSH免密码登陆

1.查看当前用户下(root)是否有.ssh的隐藏文件，如果没有就创建一个mkdir .ssh

2.输入ssh-keygen -t rsa

这个命令会在.ssh文件夹下生成id_dsa和id_ds.pub两个文件，这私钥和公钥。

3.输入cp id_rsa.pub authorized_keys

这条命令是把公钥加到用于认证的公钥文件中

4.验证SSH是否安装成功，以及是否可以免密码登陆本机

ssh localhost

如果显示如下，表示安装成功




还不行
/usr/share/phpMyAdmin/
sudo ln -s /usr/share/phpMyAdmin /var/www/phpMyAdmin 


！！！行拉！！！
设置phpMyAdmin管理多个MySql服务器

先备份 phpMyAdmin/libraries/config.default.php
/usr/share/phpMyAdmin/libraries/config.default.php
再修改

/**
 * allow login to any user entered server in cookie based authentication
 *
 * @global boolean $cfg['AllowArbitraryServer']
 */
$cfg['AllowArbitraryServer'] = true; //默认是false,改成true



如果不能再其它电脑上连接phpMyAdmin，需要修改 /etc/httpd/conf.d/phpMyAdmin.conf

--------------------------------------------------------------------------------


yum install mplayer mplayer-gui

I think vlc is better:
yum install vlc


--------------------------------------------------------

GoAgent
https://code.google.com/p/goagent/

yum install python-devel
yum install pyOpenSSL


------------------------

Python

python IDE:
yum insatll spyder

install idle:

yum install tk-devel
./configure
make
make install


version:
python -V

Python 2 install Tkinter(Fedora):
# yum install ScientificPython-tk

and use:
>>> import Tkinter

Install Pip:
yum install python-pip

Install swampy:
pip install swampy

pip install package --upgrade
pip uninstall package

Python3:
# yum install python3-tkinter

--------------------------------------------------------------------------------
一些网络软件

wireshark
yum install wireshark wireshark-gnome wireshark-devel

nmap
netcat


ifconfig 可以看到网卡是否混杂模式，如：
ifconfig eth0 看是否有“PROMISC”标志
ifconfig eth0 promisc #设置混杂模式
ifconfig eth0 -promisc #取消混杂模式

--------------------------------------------------------------------------------

TeamViewer:

yum localinstall teamviewer_linux.rpm
yum -ivh teamviewer_linux.rpm



teamviewer --daemon start

(应该不用)
安装配置文件
sudo cp /opt/teamviewer8/tv_bin/script/teamviewerd.service /lib/systemd/system/

设置开机启动
sudo systemctl enable teamviewerd.service

现在启动：
sudo systemctl start teamviewerd.service

查看启动状态：
sudo systemctl status teamviewerd.service

--------------------------------------------------------------------------------

FileZilla

yum install filezilla




检测cpu温度

yum install lm_sensors
sensors-detect
(choos YES)
sensors

--------------------------------------------------------------------------------

Apache
Setting Up Apache Virtual Hosts on Fedora

Step 1: Open the Apache configuration file to edit it
#vi /etc/httpd/conf/httpd.conf

Step 2: Add the below directive to the Apache configuration file since we are using name-based virtual hosts. This directive tells the server to use any and all IP addresses on the machine.
NameVirtualHost *:80

Step 3: Add the VirtualHost block to each different website in the Apache configuration file

<VirtualHost *:80>
ServerName website1.example.com
DocumentRoot /var/www/html/website1
</VirtualHost>
The above block tells the server to run website1.example.com using the document root /var/www/html/website1.

Step 4: Add as many virtual hosts as you want using VirtualHost blocks like below:
<VirtualHost *:80>
ServerName website2.example.com
DocumentRoot /var/www/html/website2
</VirtualHost>
Save the file and exit.

Step 5: Restart Apache
#/etc/init.d/httpd restart
The virtual host configuration is done. If the hostnames are fictitious like this example,you have to add the hostnames in your network configuration.

Step 6: Open /etc/hosts
#vi /etc/hosts

Step 7: Add the host names
127.0.0.1    website1.example.com
127.0.0.1    website2.example.com
save the file and exit.


You will now be able to access http://website1.example.com and http://website2.example.com from your browser. At any given instance your local web server runs both website1.example.com and website2.example.com How convenient it is to work on multiple websites with virtual hosts!


Allowing Override

Apache allows overriding certain directives using a .htaccess file. You might want to allow .htaccess files to override all possible directives.
In your httpd.conf file, find the section with the following

<Directory />
    Options FollowSymLinks
    AllowOverride none
</Directory>

Change AllowOverride from 'none' to 'all'. After changing the settings your file should look like

<Directory />
    Options FollowSymLinks
    AllowOverride All
</Directory>


----------
#
# VirtualHost example:
# Almost any Apache directive may go into a VirtualHost container.
# The first VirtualHost section is used for requests without a known
# server name.
#
#<VirtualHost *:80>
#    ServerAdmin webmaster@dummy-host.example.com
#    DocumentRoot /www/docs/dummy-host.example.com
#    ServerName dummy-host.example.com
#    ErrorLog logs/dummy-host.example.com-error_log
#    CustomLog logs/dummy-host.example.com-access_log common
#</VirtualHost>



--------------------------------------------------------------------------------


在 Fedora 中用 Gitolite 搭建 GIT 服务器
http://easior.is-programmer.com/posts/40133.html



--------------------------------------------------------------------------------

mutt

yum -y install sendmail
#需要安装sendmail并开启防火墙的25端口，如果你需要收邮件110端口也要开
yum -y install mutt


你可以通过find命令找到Muttrc这个文件，命令如下 find / -name Muttrc ，然后通过命令
cp /etc/Muttrc /root/.muttrc 复制到 /root 下后更名为 .muttrc ，然后你就可以编辑配置文件了。


#如果你收到的邮件乱码，设置以下信息
set charset="utf-8"
set rfc2047_parameters=yes
#如果你想自定义发件人信息，需要进行如下设置
set envelope_from=yes
set use_from=yes
set from=root@itdhz.com
set realname="itdhz"


安装完mutt后，在/usr/share/doc/mutt* 下有一份很好的手册，可以看一下。


mutt 408160341@qq.com -s "itdhz数据备份" -a /home/backup/itdhz.sql </root/readme.txt
或者
echo "test" |　mutt 408160341@qq.com -s "itdhz数据备份" -a /home/backup/itdhz.sql

这段代码表示，发送邮件到 408160341@qq.com 这个邮箱，邮件主题是“itdhz数据备份”，邮件内容在
/root/readme.txt 中，邮件中包含附件 /home/backup/itdhz.sql。如果要发送多个附件，需要在每个附件前加 -a 参数。









